<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FXB博客</title>
  
  <subtitle>分享技术与资源</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-18T01:36:03.097Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>XiaoBin Fan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo+GitHub搭建静态博客平台(六)-使用Travis CI实现自动化部署</title>
    <link href="http://yoursite.com/2018/03/05/Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/2018-03-05-Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0(%E5%85%AD)/"/>
    <id>http://yoursite.com/2018/03/05/Hexo+GitHub搭建静态博客/2018-03-05-Hexo+GitHub搭建静态博客平台(六)/</id>
    <published>2018-03-05T17:54:56.000Z</published>
    <updated>2018-03-18T01:36:03.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用<code>hexo + gitPages</code>搭建好个人博客后，每当要发表一篇博文，第一步得手动使用<code>hexo g</code>命令生成静态网页，然后还得通过<code>hexo d</code>命令将静态文件推送到GitHub远程仓库，虽然不算繁琐且可以编写批处理命令进行简化，但是有更简单的，为何不用呢？。</p><p>我们可以通过 <code>Travis CI</code> 就能实现自动化构建自己的博客，我们只需将写好的<code>Markdown</code>格式的博文，我们将博文推送(push)到GitHub的时候，就可以触发自己编写好的脚本，实现自动化部署。</p><p>首先我们需要了解<code>Travis CI</code>分为两种：</p><ul><li><a href="https://travis-ci.org/auth" target="_blank" rel="noopener">Travis CI .org</a> for public repositories【公共仓库】</li><li><a href="https://travis-ci.com/auth" target="_blank" rel="noopener">Travis CI .com</a> for private repositories【私有仓库】</li></ul><p>针对私有仓库的当然是收费的，接下来我们使用的是 <a href="https://travis-ci.org/auth" target="_blank" rel="noopener"><code>Travis CI .org</code></a> 。</p><h1 id="Travis-CI-自动化构建实现"><a href="#Travis-CI-自动化构建实现" class="headerlink" title="Travis CI 自动化构建实现"></a>Travis CI 自动化构建实现</h1><h2 id="登录Travis-CI-org"><a href="#登录Travis-CI-org" class="headerlink" title="登录Travis CI.org"></a>登录Travis CI.org</h2><p>首先我们使用<code>GitHub</code>账号登录 <a href="https://travis-ci.org/auth" target="_blank" rel="noopener">Travis CI .org</a> ，然后我们我们就进入如下界面：</p><p><img src="http://ozduqh728.bkt.clouddn.com/20180305/使用Travis CI实现自动化部署_00.png" alt=""></p><p>第一次进入可能下面没有你的仓库列表，我们可以点击右上角的<code>Sync Account</code>即可。</p><h2 id="添加自动化构建仓库"><a href="#添加自动化构建仓库" class="headerlink" title="添加自动化构建仓库"></a>添加自动化构建仓库</h2><p>其实上图中已经看到了，我们将需要自动化构建仓库前面的开关打开即可！当然我们可以回到主页[点击网站图标]，然后进行如下操作：<img src="http://ozduqh728.bkt.clouddn.com/20180305/使用Travis CI实现自动化部署_01.png" alt=""></p><p>然后也就跳转回你的<code>Profile</code>界面了，我们打开自己要实现自动化构建的仓库：</p><p><img src="http://ozduqh728.bkt.clouddn.com/20180305/使用Travis CI实现自动化部署_02.png" alt=""></p><p>注意：需要是你的博客源码的仓库，我的博客源码与网站的静态文件是两个仓库，其实使用一个仓库，选用两个分支即可！</p><p><img src="http://ozduqh728.bkt.clouddn.com/20180305/使用Travis CI实现自动化部署_03.png" alt=""></p><h2 id="设置仓库"><a href="#设置仓库" class="headerlink" title="设置仓库"></a>设置仓库</h2><p><img src="http://ozduqh728.bkt.clouddn.com/20180305/使用Travis CI实现自动化部署_04.png" alt=""></p><p>我们需要打开下面的几个开关：</p><p><img src="http://ozduqh728.bkt.clouddn.com/20180305/使用Travis CI实现自动化部署_05.png" alt=""></p><p>说明：</p><ul><li>Build only if .travis.yml is present：只有在<code>.travis.yml</code>文件中配置的分支改变了才构建</li><li>Build pushed branches：当推送完这个分支后开始构建</li></ul><p>至此， 我们已经开启了要构建的仓库，但是构建完后，我们怎么将生成的文件推送到github上呢？</p><p>我们使用Travis CI服务的目标是，我们只要将博文源文件推送到GitHub，Travis CI就自动构建并<code>push</code>静态文件到<code>GitHub Pages！</code>接下来，我们就是为Travis CI赋予操作GitHub的权利了！</p><h2 id="GitHub生成Personal-access-tokens"><a href="#GitHub生成Personal-access-tokens" class="headerlink" title="GitHub生成Personal access tokens"></a>GitHub生成Personal access tokens</h2><p>我们登录GitHub后进入设置界面，选择最下面的Developer settings：</p><p><img src="http://ozduqh728.bkt.clouddn.com/20180305/使用Travis CI实现自动化部署_06.png" alt=""></p><p>接下来就是生成<code>Personal access tokens</code>：</p><p><img src="http://ozduqh728.bkt.clouddn.com/20180305/使用Travis CI实现自动化部署_07.png" alt="">我们需要为此赋予权限，此处我除了删除权限，其它一股脑都赋予了：</p><p><img src="http://ozduqh728.bkt.clouddn.com/20180305/使用Travis CI实现自动化部署_08.png" alt=""></p><p>注意：<code>Personal access tokens</code>生成后会在上方显示出来，我们应当立即复制此秘钥，否则你将再也看不到了！</p><p><img src="http://ozduqh728.bkt.clouddn.com/20180305/使用Travis CI实现自动化部署_09.png" alt=""></p><h2 id="在Travis-CI配置Personal-access-tokens"><a href="#在Travis-CI配置Personal-access-tokens" class="headerlink" title="在Travis CI配置Personal access tokens"></a>在Travis CI配置Personal access tokens</h2><p><img src="http://ozduqh728.bkt.clouddn.com/20180305/使用Travis CI实现自动化部署_10.png" alt=""></p><p>当然，我们也可以在配置文件中书协自己的Personal access tokens，但是配置文件与源码是放在一起的，别人获得了此钥匙就相当于可以控制你的GitHub了，当然非常不安全，因此还是建议在网站上进行配置！</p><h2 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h2><p>配置文件的配置时非常灵活的，但是的主要目标 已经确定，所以配置基本上都一致。我们首先在博客的根目录下创建<code>.travis.yml</code>文件，下面是我的配置信息：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">node_js:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">"9"</span> <span class="comment"># nodejs的版本，查看命令 node -v</span></span><br><span class="line"></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line"><span class="attr">only:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">master</span> <span class="comment"># 设置自动化部署的源码分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖组件</span></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行的命令</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行的成功后执行</span></span><br><span class="line"><span class="attr">after_success:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure><p>至此，一切就绪！你可以编写一篇博文，然后推送到GitHub进行测试，如果你查看的比较快的话，你还可以看到Travis CI网页上执行的全过程，当然最终也可以看到其全貌！</p><p><img src="http://ozduqh728.bkt.clouddn.com/20180305/%E4%BD%BF%E7%94%A8Travis%20CI%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2_11.png" alt=""></p><blockquote><p>博文编号：20180305175456</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;使用&lt;code&gt;hexo + gitPages&lt;/code&gt;搭建好个人博客后，每当要发表一篇博文，第一步得手动使用&lt;code&gt;hexo g&lt;
      
    
    </summary>
    
      <category term="静态博客搭建" scheme="http://yoursite.com/categories/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="静态博客" scheme="http://yoursite.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
      <category term="Travis CI" scheme="http://yoursite.com/tags/Travis-CI/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub搭建静态博客平台(七)-常见问题</title>
    <link href="http://yoursite.com/2018/01/30/Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/2018-01-30-Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0(%E4%B8%83)/"/>
    <id>http://yoursite.com/2018/01/30/Hexo+GitHub搭建静态博客/2018-01-30-Hexo+GitHub搭建静态博客平台(七)/</id>
    <published>2018-01-30T17:28:43.000Z</published>
    <updated>2018-03-18T01:36:03.097Z</updated>
    
    <content type="html"><![CDATA[<p>场景：</p><p>在使用hexo部署已写好的博客的时候出现 <strong><code>warning: LF will be replaced by CRLF</code></strong> ，虽然只是警告提交后正常，但是每一个文件都对应一个警告，长长的警告看着贼不顺眼。</p><p>注：我使用的平台是 Windows 8.1</p><p>windows中的换行符为 CRLF， 而在linux下的换行符为LF，产生这个问题的原因是Git的机制问题，具体怎么回事暂不了解。</p><p>解决方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config –global core.autocrlf false //禁用自动转换</span><br></pre></td></tr></table></figure><h2 id="如何设置「阅读全文」？"><a href="#如何设置「阅读全文」？" class="headerlink" title="如何设置「阅读全文」？"></a>如何设置「阅读全文」？</h2><p>在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 NexT 提供三种方式来控制文章在首页的显示方式。 也就是说，在首页显示文章的摘录并显示 <strong>阅读全文</strong> 按钮，可以通过以下方法：</p><ol><li>在文章中使用 <strong>&lt;!– more –&gt;</strong> 手动进行截断，<code>Hexo</code> 提供的方式 【<strong>推荐</strong>】</li><li>在文章的 <code>front-matter</code> 中添加 <code>description</code>，并提供文章摘录</li><li>自动形成摘要，在 <strong><code>主题配置文件</code></strong> 中添加：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure><p>默认截取的长度为 <code>150</code> 字符，可以根据需要自行设定</p><blockquote><p>建议使用 &lt;!– more –&gt;（即第一种方式），除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 <code>Hexo</code> 中的插件更好的识别。<br>博客编号：20180130172928</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;场景：&lt;/p&gt;
&lt;p&gt;在使用hexo部署已写好的博客的时候出现 &lt;strong&gt;&lt;code&gt;warning: LF will be replaced by CRLF&lt;/code&gt;&lt;/strong&gt; ，虽然只是警告提交后正常，但是每一个文件都对应一个警告，长长的警告看着贼不顺
      
    
    </summary>
    
      <category term="静态博客搭建" scheme="http://yoursite.com/categories/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="静态博客" scheme="http://yoursite.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub搭建静态博客平台(五)-NexT主题配置</title>
    <link href="http://yoursite.com/2018/01/28/Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/2018-01-28-Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0(%E4%BA%94)/"/>
    <id>http://yoursite.com/2018/01/28/Hexo+GitHub搭建静态博客/2018-01-28-Hexo+GitHub搭建静态博客平台(五)/</id>
    <published>2018-01-28T17:34:03.000Z</published>
    <updated>2018-03-18T01:36:03.097Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>CSDN博客专栏：<a href="http://blog.csdn.net/column/details/19262.html" target="_blank" rel="noopener">GitHub + Hexo 搭建博客平台</a></p></blockquote><p>简介：深入剖析next主题的配置，包含设置RSS、添加标签页面、添加分类页面、设置字体、代码高亮、侧边栏、开启打赏功能、背景设置等。</p><h1 id="设置-RSS"><a href="#设置-RSS" class="headerlink" title="设置 RSS"></a>设置 RSS</h1><p>NexT 中 <code>RSS</code> 有三个设置选项，满足特定的使用场景。 更改 <code>主题配置文件</code>，设定 <code>rss</code> 字段的值：</p><ul><li>false：禁用 <code>RSS</code>，不在页面上显示 <code>RSS</code> 连接。</li><li>留空：使用 <code>Hexo</code> 生成的 <code>Feed</code> 链接。 你可以需要先安装 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 插件。</li><li>具体的链接地址：适用于已经烧制过 <code>Feed</code> 的情形。</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>修改 <code>站点配置文件</code> :</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><ul><li><code>type</code> - Feed type. (atom/rss2)</li><li><code>path</code> - Feed path. (Default: atom.xml/rss2.xml)</li><li><code>limit</code> - Maximum number of posts in the feed (Use 0 or false to show all posts)</li></ul><h1 id="添加「标签」页面"><a href="#添加「标签」页面" class="headerlink" title="添加「标签」页面"></a>添加「标签」页面</h1><p>包含标签的文章的例子：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标签测试文章</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Testing</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Another</span> <span class="string">Tag</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h2><p>在终端窗口下，定位到 <code>Hexo</code> 站点目录下。使用 <code>hexo new page</code> 新建一个页面，命名为 <code>tags</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-site</span><br><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><h2 id="设置页面类型"><a href="#设置页面类型" class="headerlink" title="设置页面类型"></a>设置页面类型</h2><p>编辑刚新建的页面，将页面的类型设置为 <code>tags</code> ，主题将自动为这个页面显示标签云。页面内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2014</span><span class="bullet">-12</span><span class="bullet">-22</span> <span class="number">12</span><span class="string">:39:04</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="修改菜单"><a href="#修改菜单" class="headerlink" title="修改菜单"></a>修改菜单</h2><p>在菜单中添加链接。编辑 <code>主题配置文件</code> ， 添加 <code>tags</code> 到 <code>menu</code> 中，如下:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">home:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">archives:</span> <span class="string">/archives</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">/tags</span></span><br></pre></td></tr></table></figure><p>注意：如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 <code>comments</code> 并将值设置为 <code>false</code>，如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2014</span><span class="bullet">-12</span><span class="bullet">-22</span> <span class="number">12</span><span class="string">:39:04</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h1 id="添加「分类」页面"><a href="#添加「分类」页面" class="headerlink" title="添加「分类」页面"></a>添加「分类」页面</h1><p>包含分类的文章的例子：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分类测试文章</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Testing</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="新建页面-1"><a href="#新建页面-1" class="headerlink" title="新建页面"></a>新建页面</h2><p>在终端窗口下，定位到 <code>Hexo</code> 站点目录下。使用 <code>hexo new page</code> 新建一个页面，命名为 <code>categories</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-site</span><br><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><h2 id="设置页面类型-1"><a href="#设置页面类型-1" class="headerlink" title="设置页面类型"></a>设置页面类型</h2><p>编辑刚新建的页面，将页面的 <code>type</code> 设置为 <code>categories</code> ，主题将自动为这个页面显示分类。页面内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2014</span><span class="bullet">-12</span><span class="bullet">-22</span> <span class="number">12</span><span class="string">:39:04</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="修改菜单-1"><a href="#修改菜单-1" class="headerlink" title="修改菜单"></a>修改菜单</h2><p>在菜单中添加链接。编辑 <code>主题配置文件</code> ， 添加 <code>categories</code> 到 <code>menu</code> 中，如下:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">home:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">archives:</span> <span class="string">/archives</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">/categories</span></span><br></pre></td></tr></table></figure><p>注意：如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 <code>comments</code> 并将值设置为 <code>false</code>，如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2014</span><span class="bullet">-12</span><span class="bullet">-22</span> <span class="number">12</span><span class="string">:39:04</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h1 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h1><blockquote><p>注意： 此特性在版本 <code>5.0.1</code> 中引入，要使用此功能请确保所使用的 <code>NexT</code> 版本在此之后</p></blockquote><p>为了解决 <code>Google Fonts API</code> 不稳定的问题，NexT 在 5.0.1 中引入此特性。 通过此特性，你可以指定所使用的字体库外链地址；与此同时，<code>NexT</code> 开放了 5 个特定范围的字体设定，他们是：</p><ul><li>全局字体：定义的字体将在全站范围使用</li><li>标题字体：文章内标题的字体（h1, h2, h3, h4, h5, h6）</li><li>文章字体：文章所使用的字体</li><li>Logo字体：Logo 所使用的字体</li><li>代码字体： 代码块所使用的字体</li></ul><p>各项所指定的字体将作为首选字体，当他们不可用时会自动 <code>Fallback</code> 到 <code>NexT</code> 设定的基础字体组：</p><ul><li>非代码类字体：Fallback 到 “PingFang SC”, “Microsoft YaHei”, sans-serif</li><li>代码类字体： Fallback 到 consolas, Menlo, “PingFang SC”, “Microsoft YaHei”, monospace</li></ul><p>另外，每一项都有一个额外的 <code>external</code> 属性，此属性用来控制是否使用外链字体库。 开放此属性方便你设定那些已经安装在系统中的字体，减少不必要的请求（请求大小）。</p><p>配置示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 外链字体库地址，例如 //fonts.googleapis.com (默认值)</span></span><br><span class="line"><span class="attr">host:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局字体，应用在 body 元素上</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line"><span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">family:</span> <span class="string">Monda</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 标题字体 (h1, h2, h3, h4, h5, h6)</span></span><br><span class="line"><span class="attr">headings:</span></span><br><span class="line"><span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">family:</span> <span class="string">Roboto</span> <span class="string">Slab</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章字体</span></span><br><span class="line"><span class="attr">posts:</span></span><br><span class="line"><span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">family:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Logo 字体</span></span><br><span class="line"><span class="attr">logo:</span></span><br><span class="line"><span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">family:</span> <span class="string">Lobster</span> <span class="string">Two</span></span><br><span class="line"><span class="attr">size:</span> <span class="number">24</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代码字体，应用于 code 以及代码块</span></span><br><span class="line"><span class="attr">codes:</span></span><br><span class="line"><span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">family:</span> <span class="string">PT</span> <span class="string">Mono</span></span><br></pre></td></tr></table></figure><h1 id="设置代码高亮主题"><a href="#设置代码高亮主题" class="headerlink" title="设置代码高亮主题"></a>设置代码高亮主题</h1><p><code>NexT</code> 使用 <a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="noopener">Tomorrow Theme</a> 作为代码高亮，共有5款主题供你选择。 <code>NexT</code> 默认使用的是 白色的 <code>normal</code> 主题，可选的值有 <code>norma</code>l，<code>night</code>， <code>night blue</code>， <code>night bright</code>， <code>night eighties</code>：</p><p><a href="http://ozduqh728.bkt.clouddn.com/20180128/codetheme.png" target="_blank" rel="noopener"><img src="http://ozduqh728.bkt.clouddn.com/20180128/codetheme.png" alt="" title="20180128/codetheme"></a></p><p>更改 <code>highlight_theme</code> 字段，将其值设定成你所喜爱的高亮主题，例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Code Highlight theme</span></span><br><span class="line"><span class="comment"># Available value: normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="comment"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br></pre></td></tr></table></figure><h1 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h1><p>侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 <code>主题配置文件</code> 中。</p><p><strong>&lt;1&gt;</strong> 链接放置在 <code>social</code> 字段下，一行一个链接。其键值格式是 <strong>显示文本: 链接地址</strong>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social links</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">GitHub:</span> <span class="attr">https://github.com/your-user-name</span></span><br><span class="line"><span class="attr">Twitter:</span> <span class="attr">https://twitter.com/your-user-name</span></span><br><span class="line"><span class="string">微博:</span> <span class="attr">http://weibo.com/your-user-name</span></span><br><span class="line"><span class="string">豆瓣:</span> <span class="attr">http://douban.com/people/your-user-name</span></span><br><span class="line"><span class="string">知乎:</span> <span class="attr">http://www.zhihu.com/people/your-user-name</span></span><br><span class="line"><span class="comment"># 等等</span></span><br></pre></td></tr></table></figure><p><strong>&lt;2&gt;</strong> 设定链接的图标，对应的字段是 <code>social_icons</code>。其键值格式是 <strong> 匹配键: </strong><code>Font Awesome</code><strong> 图标名称</strong>， <code>匹配键</code> 与上一步所配置的链接的 <strong>显示文本</strong> 相同（<strong>大小写严格匹配</strong>），<strong>图标名称</strong> 是 <code>Font Awesome</code> 图标的名字（不必带 <code>fa-</code> 前缀）。 <code>enable</code> 选项用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Icons</span></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># Icon Mappings</span></span><br><span class="line"><span class="attr">GitHub:</span> <span class="string">github</span></span><br><span class="line"><span class="attr">Twitter:</span> <span class="string">twitter</span></span><br><span class="line"><span class="string">微博:</span> <span class="string">weibo</span></span><br></pre></td></tr></table></figure><h1 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h1><p>越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要 <code>主题配置文件</code> 中填入 <code>微信</code> 和 <code>支付宝</code> 收款二维码图片地址即可开启该功能。</p><p>打赏功能配置示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reward_comment:</span> <span class="string">坚持原创技术分享，您的支持将鼓励我继续创作！</span></span><br><span class="line"><span class="attr">wechatpay:</span> <span class="string">/path/to/wechat-reward-image</span></span><br><span class="line"><span class="attr">alipay:</span> <span class="string">/path/to/alipay-reward-image</span></span><br></pre></td></tr></table></figure><h1 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h1><p>编辑 <code>主题配置文件</code> 添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># title</span></span><br><span class="line"><span class="attr">links_title:</span> <span class="string">Links</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line"><span class="attr">MacTalk:</span> <span class="attr">http://macshuo.com/</span></span><br><span class="line"><span class="attr">Title:</span> <span class="attr">http://example.com/</span></span><br></pre></td></tr></table></figure><h1 id="腾讯公益404页面"><a href="#腾讯公益404页面" class="headerlink" title="腾讯公益404页面"></a>腾讯公益404页面</h1><p>腾讯公益404页面，寻找丢失儿童，让大家一起关注此项公益事业！效果如下 <a href="http://www.ixirong.com/404.html" target="_blank" rel="noopener">http://www.ixirong.com/404.html</a></p><p>使用方法，新建 <code>404.html</code> 页面，放到主题的 <code>source</code> 目录下，内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"https://qzone.qq.com/gy/404/style/404style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/plain"</span> <span class="attr">src</span>=<span class="string">"http://www.qq.com/404/search_children.js"</span></span></span><br><span class="line"><span class="tag"><span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">homePageUrl</span>=<span class="string">"/"</span></span></span><br><span class="line"><span class="tag"><span class="attr">homePageName</span>=<span class="string">"回到我的主页"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/data.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/page.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注：因为404页面只能绑定顶级域名，我的博客，没买也没绑定域名，所以才不会有效果。</p><h1 id="站点建立时间"><a href="#站点建立时间" class="headerlink" title="站点建立时间"></a>站点建立时间</h1><p>这个时间将在站点的底部显示，例如 <code>© 2013 - 2015</code>。 编辑 <code>主题配置文件</code>，新增字段 <code>since</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">since:</span> <span class="number">2013</span></span><br></pre></td></tr></table></figure><h1 id="订阅微信公众号"><a href="#订阅微信公众号" class="headerlink" title="订阅微信公众号"></a>订阅微信公众号</h1><blockquote><p>注意： 此特性在版本 <code>5.0.1</code> 中引入，要使用此功能请确保所使用的 <code>NexT</code> 版本在此之后</p></blockquote><p>在每篇文章的末尾显示微信公众号二维码，扫一扫，轻松订阅博客。</p><p>在微信公众号平台下载您的二维码，并将它存放于博客<code>source/uploads/</code>目录下。</p><p>然后编辑 主题配置文件，如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Wechat Subscriber</span></span><br><span class="line"><span class="attr">wechat_subscriber:</span></span><br><span class="line"><span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">qcode:</span> <span class="string">/uploads/wechat-qcode.jpg</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">欢迎您扫一扫上面的微信公众号，订阅我的博客！</span></span><br></pre></td></tr></table></figure><h1 id="设置「动画效果」"><a href="#设置「动画效果」" class="headerlink" title="设置「动画效果」"></a>设置「动画效果」</h1><p><code>NexT</code> 默认开启动画效果，效果使用 <code>JavaScript</code> 编写，因此需要等待 <code>JavaScript</code> 脚本完全加载完毕后才会显示内容。 如果您比较在乎速度，可以将设置此字段的值为 <code>false</code> 来关闭动画。</p><p>编辑 <code>主题配置文件</code>， 搜索 <code>use_motion</code>，根据您的需求设置值为 <code>true</code> 或者 <code>false</code> 即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">use_motion:</span> <span class="literal">true</span> <span class="comment"># 开启动画效果</span></span><br><span class="line"><span class="attr">use_motion:</span> <span class="literal">false</span> <span class="comment"># 关闭动画效果</span></span><br></pre></td></tr></table></figure><h1 id="设置「背景动画」"><a href="#设置「背景动画」" class="headerlink" title="设置「背景动画」"></a>设置「背景动画」</h1><p><code>NexT</code> 自带两种背景动画效果</p><p>编辑 <code>主题配置文件</code>， 搜索 <code>canvas_nest</code> 或 <code>three_waves</code>，根据您的需求设置值为 <code>true</code> 或者 <code>false</code> 即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># canvas_nest 配置示例</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span> <span class="string">//开启动画</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">false</span> <span class="string">//关闭动画</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># three_waves 配置示例</span></span><br><span class="line"><span class="attr">three_waves:</span> <span class="literal">true</span> <span class="string">//开启动画</span></span><br><span class="line"><span class="attr">three_waves:</span> <span class="literal">false</span> <span class="string">//关闭动画</span></span><br></pre></td></tr></table></figure><h1 id="如何设置「阅读全文」"><a href="#如何设置「阅读全文」" class="headerlink" title="如何设置「阅读全文」"></a>如何设置「阅读全文」</h1><p>在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 NexT 提供三种方式来控制文章在首页的显示方式。 也就是说，在首页显示文章的摘录并显示 <code>阅读全文</code> 按钮，可以通过以下方法：</p><ul><li>在文章中使用 手动进行截断，<code>Hexo</code> 提供的方式【推荐】</li><li>在文章的 <code>front-matter</code> 中添加 <code>description</code>，并提供文章摘录</li><li>自动形成摘要，在 主题配置文件 中添加：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure><p>默认截取的长度为 <code>150</code> 字符，可以根据需要自行设定</p><p>建议使用 <code>&lt;!-- more --&gt;</code>（即第一种方式），除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 <code>Hexo</code> 中的插件更好的识别。</p><blockquote><p>博客编号：20180121073403</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;CSDN博客专栏：&lt;a href=&quot;http://blog.csdn.net/column/details/19262.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub + Hexo 搭建博客平台&lt;/a&gt;&lt;/p
      
    
    </summary>
    
      <category term="静态博客搭建" scheme="http://yoursite.com/categories/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="静态博客" scheme="http://yoursite.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Next" scheme="http://yoursite.com/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub搭建静态博客平台(四)-Hexo基本操作</title>
    <link href="http://yoursite.com/2018/01/28/Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/2018-01-28-Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0(%E5%9B%9B)/"/>
    <id>http://yoursite.com/2018/01/28/Hexo+GitHub搭建静态博客/2018-01-28-Hexo+GitHub搭建静态博客平台(四)/</id>
    <published>2018-01-28T09:07:13.000Z</published>
    <updated>2018-03-18T01:36:03.097Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>CSDN博客专栏：<a href="http://blog.csdn.net/column/details/19262.html" target="_blank" rel="noopener">GitHub + Hexo 搭建博客平台</a></p></blockquote><h1 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h1><p>你可以执行下列命令来创建一篇新文章：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>您可以在命令中指定文章的布局（<code>layout</code>），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p><h2 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h2><p><code>Hexo</code> 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>，它们分别对应不同的路径，而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th style="text-align:left">布局</th><th style="text-align:left">路径</th></tr></thead><tbody><tr><td style="text-align:left">post</td><td style="text-align:left">source/_posts</td></tr><tr><td style="text-align:left">page</td><td style="text-align:left">source</td></tr><tr><td style="text-align:left">draft</td><td style="text-align:left">source/_drafts</td></tr></tbody></table><blockquote><p><strong>不要处理我的文章</strong><br>如果你不想你的文章被处理，你可以将 <code>Front-Matter</code> 中的<code>layout:</code> 设为 <code>false</code> 。</p></blockquote><h2 id="文件名称"><a href="#文件名称" class="headerlink" title="文件名称"></a>文件名称</h2><p><code>Hexo</code> 默认以标题做为文件名称，但您可编辑 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章。</p><table><thead><tr><th style="text-align:left">变量</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">:title</td><td style="text-align:left">标题（小写，空格将会被替换为短杠）</td></tr><tr><td style="text-align:left">:year</td><td style="text-align:left">建立的年份，比如， 2015</td></tr><tr><td style="text-align:left">:month</td><td style="text-align:left">建立的月份（有前导零），比如， 04</td></tr><tr><td style="text-align:left">:i_month</td><td style="text-align:left">建立的月份（无前导零），比如， 4</td></tr><tr><td style="text-align:left">:day</td><td style="text-align:left">建立的日期（有前导零），比如， 07</td></tr><tr><td style="text-align:left">:i_day</td><td style="text-align:left">建立的日期（无前导零），比如， 7</td></tr></tbody></table><h2 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h2><p>刚刚提到了 <code>Hexo</code> 的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹，您可通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹，该命令的使用方式与 <code>new</code> 十分类似，您也可在命令中指定 <code>layout</code> 来指定布局。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p><h2 id="模版（Scaffold）"><a href="#模版（Scaffold）" class="headerlink" title="模版（Scaffold）"></a>模版（Scaffold）</h2><p>在新建文章时，<code>Hexo</code> 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new photo <span class="string">"My Gallery"</span></span><br></pre></td></tr></table></figure><p>在执行这行指令时，<code>Hexo</code> 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>photo.md</code>，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p><table><thead><tr><th style="text-align:left">变量</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">layout</td><td style="text-align:left">布局</td></tr><tr><td style="text-align:left">title</td><td style="text-align:left">标题</td></tr><tr><td style="text-align:left">date</td><td style="text-align:left">文件建立日期</td></tr></tbody></table><h1 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h1><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="string">/7/13</span> <span class="number">20</span><span class="string">:46:25</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">layout</td><td style="text-align:left">布局</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">title</td><td style="text-align:left">标题</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">date</td><td style="text-align:left">建立日期</td><td style="text-align:left">文件建立日期</td></tr><tr><td style="text-align:left">updated</td><td style="text-align:left">更新日期</td><td style="text-align:left">文件更新日期</td></tr><tr><td style="text-align:left">comments</td><td style="text-align:left">开启文章的评论功能</td><td style="text-align:left">true</td></tr><tr><td style="text-align:left">tags</td><td style="text-align:left">标签（不适用于分页）</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">categories</td><td style="text-align:left">分类（不适用于分页）</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">permalink</td><td style="text-align:left">覆盖文章网址</td></tr></tbody></table><h2 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h2><p><strong>只有文章支持分类和标签</strong>，您可以在 <code>Front-matter</code> 中设置。在其他系统中，分类和标签听起来很接近，但是在 <code>Hexo</code> 中<strong>两者有着明显的差别</strong>：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><blockquote><p>分类方法的分歧:通常分类可以是同级的，也可以是父子分类。<strong>但是Hexo不支持指定多个同级分类。</strong> 下面的指定方法：<br>categories:</p><ul><li>Diary</li><li>Life<br>会使分类Life成为Diary的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</li></ul></blockquote><h2 id="JSON-Front-matter"><a href="#JSON-Front-matter" class="headerlink" title="JSON Front-matter"></a>JSON Front-matter</h2><p>除了 <code>YAML</code> 外，你也可以使用 <code>JSON</code> 来编写 <code>Front-matter</code>，只要将 <code>---</code> 代换成 <code>;;;</code> 即可。</p><h1 id="标签插件（Tag-Plugins）-非重点"><a href="#标签插件（Tag-Plugins）-非重点" class="headerlink" title="标签插件（Tag Plugins）[非重点]"></a>标签插件（Tag Plugins）[非重点]</h1><p>声明：功能非常强大，但是简书以及CSDN不支持，为了保证通用性，此功能不详细深入。如果想详细了解可参考《<a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="noopener">标签插件</a>》。</p><p><strong>标签插件</strong> 和 <strong>Front-matter</strong> 中的标签不同，它们是用于在文章中快速插入特定内容的插件。</p><h2 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h2><p>在文章中插入引言，可包含作者、来源和标题。</p><p><strong>别号</strong>： <code>quote</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>在文章中插入代码。</p><p><strong>别名</strong>： code</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><h2 id="Pull-Quote"><a href="#Pull-Quote" class="headerlink" title="Pull Quote"></a>Pull Quote</h2><p>在文章中插入 Pull quote。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pullquote [class] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure><h2 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h2><p>在文章中嵌入 jsFiddle。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure><h2 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h2><p>在文章中嵌入 Gist。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure><h2 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h2><p>在文章中插入 iframe。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure><h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><p>在文章中插入指定大小的图片。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure><h2 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h2><p>在文章中插入链接，并自动给外部链接添加 target=”_blank” 属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure><h2 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h2><p>插入 source 文件夹内的代码文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include_code [title] [lang:language] path/to/file %&#125;</span><br></pre></td></tr></table></figure><h2 id="Youtube"><a href="#Youtube" class="headerlink" title="Youtube"></a>Youtube</h2><p>在文章中插入 Youtube 视频。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure><h2 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h2><p>在文章中插入 Vimeo 视频。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% vimeo video_id %&#125;</span><br></pre></td></tr></table></figure><h2 id="引用文章"><a href="#引用文章" class="headerlink" title="引用文章"></a>引用文章</h2><p>引用其他文章的链接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_path slug %&#125;</span><br><span class="line">&#123;% post_link slug [title] %&#125;</span><br></pre></td></tr></table></figure><h2 id="引用资源"><a href="#引用资源" class="headerlink" title="引用资源"></a>引用资源</h2><p>引用文章的资源。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_path slug %&#125;</span><br><span class="line">&#123;% asset_img slug [title] %&#125;</span><br><span class="line">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure><h2 id="Raw"><a href="#Raw" class="headerlink" title="Raw"></a>Raw</h2><p>如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><h1 id="资源文件夹"><a href="#资源文件夹" class="headerlink" title="资源文件夹"></a>资源文件夹</h1><p>资源（Asset）代表 <code>source</code> 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 <code>source/images</code> 文件夹中。然后通过类似于<code>！[](/images/image.jpg)</code>的方法访问它们。</p><h2 id="相对路径引用的标签插件"><a href="#相对路径引用的标签插件" class="headerlink" title="相对路径引用的标签插件"></a>相对路径引用的标签插件</h2><p>通过常规的 <code>markdown</code> 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_path slug %&#125;</span><br><span class="line">&#123;% asset_img slug [title] %&#125;</span><br><span class="line">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure><p>比如说：当你打开文章资源文件夹功能后，你把一个 <code>example.jpg</code> 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 <code>markdown</code> 语法 <code>![](/example.jpg)</code> ，它将 <strong>不会</strong> 出现在首页上。（但是它会在文章中按你期待的方式工作）</p><p>正确的引用图片方式是使用下列的标签插件而不是 <code>markdown</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure><p>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p><h1 id="数据文件"><a href="#数据文件" class="headerlink" title="数据文件"></a>数据文件</h1><p>有时您可能需要在主题中使用某些资料，而这些资料并不在文章内，并且是需要重复使用的，那么您可以考虑使用 Hexo 3.0 新增的「数据文件」功能。此功能会载入 <code>source/_data</code> 内的 <code>YAML</code> 或 <code>JSON</code> 文件，如此一来您便能在网站中复用这些文件了。</p><p>举例来说，在 <code>source/_data</code> 文件夹中新建 <code>menu.yml</code> 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Home: /</span><br><span class="line">Gallery: /gallery/</span><br><span class="line">Archives: /archives/</span><br></pre></td></tr></table></figure><p>您就能在模板中使用这些资料：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% for (var link in site.data.menu) &#123; %&gt;</span><br><span class="line">&lt;a href=&quot;&lt;%= site.data.menu[link] %&gt;&quot;&gt; &lt;%= link %&gt; &lt;/a&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>渲染结果如下 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;/&quot;&gt; Home &lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;/gallery/&quot;&gt; Gallery &lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;/archives/&quot;&gt; Archives &lt;/a&gt;</span><br></pre></td></tr></table></figure><h1 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h1><h2 id="hexo-server"><a href="#hexo-server" class="headerlink" title="hexo-server"></a>hexo-server</h2><p><code>Hexo 3.0</code> 把服务器独立成了个别模块，您必须先安装 <code>hexo-server</code> 才能使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure><p>安装完成后，输入以下命令以启动服务器，您的网站会在 <code>http://localhost:4000</code> 下启动。在服务器启动期间，<code>Hexo</code><strong> 会监视文件变动并自动更新，您无须重启服务器。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>如果您想要更改端口，或是在执行时遇到了 <code>EADDRINUSE</code> 错误，可以在执行时使用 <code>-p</code> 选项指定其他端口，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></table></figure><h3 id="静态模式"><a href="#静态模式" class="headerlink" title="静态模式"></a>静态模式</h3><p>在静态模式下，服务器只处理 <code>public</code> 文件夹内的文件，而不会处理文件变动，在执行时，您应该先自行执行 <code>hexo generate</code>，此模式通常用于生产环境（production mode）下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -s</span><br></pre></td></tr></table></figure><h3 id="自定义-IP"><a href="#自定义-IP" class="headerlink" title="自定义 IP"></a>自定义 IP</h3><p>服务器默认运行在 <code>0.0.0.0</code>，您可以覆盖默认的 <code>IP</code> 设置，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></table></figure><p>指定这个参数后，您就只能通过该IP才能访问站点。例如，对于一台使用无线网络的笔记本电脑，除了指向本机的 <code>127.0.0.1</code> 外，通常还有一个 <code>192.168.*.*</code> 的局域网IP，如果像上面那样使用 <code>-i</code> 参数，就不能用 <code>127.0.0.1</code> 来访问站点了。对于有公网IP的主机，如果您指定一个局域网IP作为 <code>-i</code> 参数的值，那么就无法通过公网来访问站点。</p><h2 id="Pow"><a href="#Pow" class="headerlink" title="Pow"></a>Pow</h2><p><code>Pow</code> 是一个 <code>Mac</code> 系统上的零配置 <code>Rack</code> 服务器，它也可以作为一个简单易用的静态文件服务器来使用。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl get.pow.cx | sh</span><br></pre></td></tr></table></figure><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>在 <code>~/.pow</code> 文件夹建立链接（symlink）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.pow</span><br><span class="line">$ ln -s /path/to/myapp</span><br></pre></td></tr></table></figure><p>您的网站将会在 <code>http://myapp.dev</code> 下运行，网址根据链接名称而定。</p><h1 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h1><p>使用 <code>Hexo</code> 生成静态文件快速而且简单。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><h2 id="监视文件变动"><a href="#监视文件变动" class="headerlink" title="监视文件变动"></a>监视文件变动</h2><p><code>Hexo</code> 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 <code>SHA1 checksum</code>，只有变动的文件才会写入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --watch</span><br></pre></td></tr></table></figure><h2 id="完成后部署"><a href="#完成后部署" class="headerlink" title="完成后部署"></a>完成后部署</h2><p>您可执行下列的其中一个命令，让 <code>Hexo</code> 在生成完毕后自动部署网站，两个命令的作用是相同的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --deploy</span><br><span class="line">$ hexo deploy --generate</span><br></pre></td></tr></table></figure><p>上面两个命令可以简写为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p><code>Hexo</code> 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>在开始之前，您必须先在<code>_config.yml</code> 中修改参数，一个正确的部署配置中至少要有 <code>type</code> 参数，例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br></pre></td></tr></table></figure><p>您可同时使用多个 <code>deployer</code>，<code>Hexo</code> 会依照顺序执行每个 <code>deployer</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">- type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span></span><br><span class="line"><span class="attr">- type:</span> <span class="string">heroku</span></span><br><span class="line"><span class="attr">repo:</span></span><br></pre></td></tr></table></figure><blockquote><p>缩进</p><p>YAML依靠缩进来确定元素间的从属关系。因此，请确保每个deployer的缩进长度相同，并且使用空格缩进。</p></blockquote><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p>安装 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>修改 <code>站点配置文件</code> :</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">[branch]</span></span><br><span class="line"><span class="attr">message:</span> <span class="string">[message]</span></span><br></pre></td></tr></table></figure><p><img src="http://ozduqh728.bkt.clouddn.com/20180212/git_Peizhi.png" alt=""></p><p><strong>Hexo 生成的所有文件都放在 public 文件夹中，您可以将它们复制到您喜欢的地方。</strong></p><p>而Heroku、Rsync、OpenShift、FTPSync的部署可以参考《<a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">部署</a>》。</p><blockquote><p>博客编号：20180120090713</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;CSDN博客专栏：&lt;a href=&quot;http://blog.csdn.net/column/details/19262.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub + Hexo 搭建博客平台&lt;/a&gt;&lt;/p
      
    
    </summary>
    
      <category term="静态博客搭建" scheme="http://yoursite.com/categories/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="静态博客" scheme="http://yoursite.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub搭建静态博客平台(三)-Next主题基本使用</title>
    <link href="http://yoursite.com/2018/01/27/Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/2018-01-27-Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0(%E4%B8%89)/"/>
    <id>http://yoursite.com/2018/01/27/Hexo+GitHub搭建静态博客/2018-01-27-Hexo+GitHub搭建静态博客平台(三)/</id>
    <published>2018-01-27T08:41:23.000Z</published>
    <updated>2018-03-18T01:36:03.097Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>CSDN博客专栏：<a href="http://blog.csdn.net/column/details/19262.html" target="_blank" rel="noopener">GitHub + Hexo 搭建博客平台</a></p></blockquote><p>博客网站搭建好后就是为自己的网站设置一个美观的主题了， <code>hexo</code> 官方提供了许多<a href="https://hexo.io/themes/" target="_blank" rel="noopener">官方主题</a>,还有许多别人编写的主题，例如：<a href="https://github.com/pinggod/hexo-theme-jekyll" target="_blank" rel="noopener">hexo-theme-jekyll</a> 和 <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia</a>。还有很多就不一一列举了，我将介绍也是我将使用的是 <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">Next主题</a> 。</p><h1 id="导入并使用主题"><a href="#导入并使用主题" class="headerlink" title="导入并使用主题"></a>导入并使用主题</h1><p>导入主题的方式很简单，有两种：</p><ol><li>进入博客根目录 <code>/themes/</code> , 执行 <code>$git clone ...</code> 命令，将主题克隆下来</li><li>直接将主题下载并解压到博客根目录 <code>/themes/</code></li></ol><p>为了简洁些我们将其目录重命名为next。配置主题时，我们需要修改博客根目录的 <code>_config.yml</code> 中的默认 <code>theme: landscape</code>改为 <code>theme: 使用主题</code>就可以了。然后我们就可以正常启动博客，来验证主题是否应用成功了。</p><p>注意：修改 <code>theme:</code> 的时候后面必须有一个空格。</p><h1 id="Next主题的使用"><a href="#Next主题的使用" class="headerlink" title="Next主题的使用"></a>Next主题的使用</h1><p>Next的官方网址为：<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></p><blockquote><p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 <code>Hexo</code> 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br><strong>为了描述方便，在以下说明中，将前者称为 </strong><code>站点配置文件</code><strong>， 后者称为 </strong><code>主题配置文件</code><strong>。</strong></p></blockquote><h3 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h3><blockquote><p><strong>主题的配置文件修改时会自动更新，因此无需重启服务器。</strong></p></blockquote><h3 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h3><p><code>Scheme</code> 是 <code>NexT</code> 提供的一种特性，借助于 <code>Scheme</code>，<code>NexT</code> 为你提供多种不同的外观。同时，几乎所有的配置都可以在 <code>Scheme</code> 之间共用。目前 NexT 支持三种 Scheme，他们是：</p><ol><li><code>Muse</code> - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li><code>Mist</code> - Muse 的紧凑版本，整洁有序的单栏外观</li><li><code>Pisces</code> - 双栏 Scheme，小家碧玉似的清新</li></ol><p><code>Scheme</code> 的切换通过更改 <code>主题配置文件</code>，搜索 <code>scheme</code> 关键字。 你会看到有三行 <code>scheme</code> 的配置，将你需用启用的 <code>scheme</code> 前面注释 <code>#</code> 去除即可。</p><h3 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h3><p>编辑 <code>站点配置文件</code>， 将 <code>language</code> 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure><p>目前 NexT 支持的语言如以下表格所示：</p><table><thead><tr><th style="text-align:left">语言</th><th style="text-align:left">代码</th><th style="text-align:left">设定示例</th></tr></thead><tbody><tr><td style="text-align:left"><strong>English</strong></td><td style="text-align:left">en</td><td style="text-align:left">language: en</td></tr><tr><td style="text-align:left"><strong>简体中文</strong></td><td style="text-align:left">zh-Hans</td><td style="text-align:left">language: zh-Hans</td></tr><tr><td style="text-align:left">Français</td><td style="text-align:left">fr-FR</td><td style="text-align:left">language: fr-FR</td></tr><tr><td style="text-align:left">Português</td><td style="text-align:left">pt</td><td style="text-align:left">language: pt or language: pt-BR</td></tr><tr><td style="text-align:left"><strong>繁體中文</strong></td><td style="text-align:left">zh-hk 或者 zh-tw</td><td style="text-align:left">language: zh-hk</td></tr><tr><td style="text-align:left">Русский язык</td><td style="text-align:left">ru</td><td style="text-align:left">language: ru</td></tr><tr><td style="text-align:left">Deutsch</td><td style="text-align:left">de</td><td style="text-align:left">language: de</td></tr><tr><td style="text-align:left">日本語</td><td style="text-align:left">ja</td><td style="text-align:left">language: ja</td></tr><tr><td style="text-align:left">Indonesian</td><td style="text-align:left">id</td><td style="text-align:left">language: id</td></tr><tr><td style="text-align:left">Korean</td><td style="text-align:left">ko</td><td style="text-align:left">language: ko</td></tr></tbody></table><h3 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h3><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 <code>NexT</code> 使用的是 <a href="http://fontawesome.io/" target="_blank" rel="noopener">Font Awesome</a> 提供的图标， <code>Font Awesome</code> 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 <code>Retina</code> 屏幕下 图标模糊的问题。</p><p>编辑 <code>主题配置文件</code>，修改以下内容：</p><p><strong>&lt;1&gt; 设置菜单项</strong></p><p>设定菜单内容, 对应的字段是 <code>menu</code>。 菜单内容的设置格式是：<code>item name: link</code>。其中 <code>item name</code> 是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">home: /</span><br><span class="line">archives: /archives</span><br><span class="line">#about: /about</span><br><span class="line">#categories: /categories</span><br><span class="line">tags: /tags</span><br><span class="line">#commonweal: /404.html</span><br></pre></td></tr></table></figure><blockquote><p><strong>若你的站点运行在子目录中，请将链接前缀的 / 去掉</strong></p></blockquote><p><code>NexT</code> 默认的菜单项有（标注 ♠ 的项表示需要手动创建这个页面）：</p><table><thead><tr><th>键值</th><th>设定值</th><th>显示文本（简体中文）</th></tr></thead><tbody><tr><td>home</td><td>home: /</td><td>主页</td></tr><tr><td>archives</td><td>archives: /archives</td><td>归档页</td></tr><tr><td>categories</td><td>categories: /categories</td><td>分类页 ♠</td></tr><tr><td>tags</td><td>tags: /tags</td><td>标签页 ♠</td></tr><tr><td>about</td><td>about: /about</td><td>关于页面 ♠</td></tr><tr><td>commonweal</td><td>commonweal: /404.html</td><td>公益 404 ♠</td></tr></tbody></table><p><strong>&lt;2&gt; 设置菜单项的显示文本。</strong></p><p>在第一步中设置的菜单的名称并不直接用于界面上的展示。<code>Hexo</code> 在生成的时候将使用这个名称查找对应的语言翻译，并提取显示文本。因为我们设置为简体中文，因此会自动进行翻译。这些翻译文本放置在 NexT 主题目录下的 <code>languages/{language}.yml</code> （<code>{language}</code> 为你所使用的语言）。</p><p>以简体中文为例，若你需要添加一个菜单项，比如 <code>something</code>。那么就需要<strong>修改简体中文对应的翻译文件</strong><code>languages/zh-Hans.yml</code>，在 menu 字段下添加一项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">home: 首页</span><br><span class="line">archives: 归档</span><br><span class="line">categories: 分类</span><br><span class="line">tags: 标签</span><br><span class="line">about: 关于</span><br><span class="line">search: 搜索</span><br><span class="line">commonweal: 公益404</span><br><span class="line">something: 有料</span><br></pre></td></tr></table></figure><p><strong>&lt;3&gt; 设定菜单项的图标</strong></p><p>设定菜单项的图标，对应的字段是 <code>menu_icons</code>。 此设定格式是 <code>item name: icon name</code>，其中 <code>item name</code> 与上一步所配置的菜单名字对应，<code>icon name</code> 是 <code>Font Awesome</code> 图标的名字。而 <code>enable</code> 可用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu_icons:</span><br><span class="line">enable: true</span><br><span class="line"># Icon Mapping.</span><br><span class="line">home: home</span><br><span class="line">about: user</span><br><span class="line">categories: th</span><br><span class="line">tags: tags</span><br><span class="line">archives: archive</span><br><span class="line">commonweal: heartbeat</span><br></pre></td></tr></table></figure><p>在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的 <code>Font Awesome</code> 图标名字） 的情况下，NexT 将会使用 <strong>?</strong> 作为图标。</p><blockquote><p><strong>请注意键值（如 </strong><code>home</code><strong>）的大小写要严格匹配</strong></p></blockquote><h3 id="设置侧栏"><a href="#设置侧栏" class="headerlink" title="设置侧栏"></a>设置侧栏</h3><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改 <code>主题配置文件</code> 中的 <code>sidebar</code> 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</p><p><strong>&lt;1&gt; 设置侧栏的位置</strong></p><p>修改 <code>sidebar.position</code> 的值，支持的选项有：</p><ul><li><code>left</code> - 靠左放置</li><li><code>right</code> - 靠右放置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">position: left</span><br></pre></td></tr></table></figure><p><strong>&lt;2&gt; 设置侧栏显示的时机</strong></p><p>修改 <code>sidebar.display</code> 的值，支持的选项有：</p><ul><li><code>post</code> - 默认行为，在文章页面（拥有目录列表）时显示</li><li><code>always</code> - 在所有页面中都显示</li><li><code>hide</code> - 在所有页面中都隐藏（可以手动展开）</li><li><code>remove</code> - 完全移除</li></ul><h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><p>编辑 <code>主题配置文件</code>，修改字段<code>avatar</code>， 值设置成头像的链接地址。其中，头像的链接地址可以是：</p><p><img src="http://ozduqh728.bkt.clouddn.com/20180212/setHeadPhoto.png" alt=""></p><h2 id="集成常用的第三方服务"><a href="#集成常用的第三方服务" class="headerlink" title="集成常用的第三方服务"></a>集成常用的第三方服务</h2><p><strong>详见：</strong><a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="noopener">第三方服务集成</a></p><h2 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h2><blockquote><p>注意： <code>baidu_analytics</code> 不是你的百度 id 或者 百度统计 id</p></blockquote><p><strong>&lt;1&gt;</strong> 登录 <a href="https://tongji.baidu.com/web/welcome/login" target="_blank" rel="noopener">百度统计</a>， 定位到站点的代码获取页面</p><p><strong>&lt;2&gt;</strong> 复制 <code>hm.js?</code> 后面那串统计脚本 id，如：</p><p><a href="http://ozduqh728.bkt.clouddn.com/20180126/baidu_analytics.png" target="_blank" rel="noopener"><img src="http://ozduqh728.bkt.clouddn.com/20180126/baidu_analytics.png" alt="" title="20180126/baidu\_analytics"></a></p><p><strong>&lt;3&gt;</strong> 编辑 <code>主题配置文件</code>， 修改字段 <code>baidu_analytics</code> 字段，值设置成你的百度统计脚本 <code>id</code>。</p><h3 id="阅读次数统计（LeanCloud）"><a href="#阅读次数统计（LeanCloud）" class="headerlink" title="阅读次数统计（LeanCloud）"></a>阅读次数统计（LeanCloud）</h3><p>在注册完成 <a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> 帐号并验证邮箱之后，我们就可以登录我们的 <code>LeanCloud</code> 帐号，进行一番配置之后拿到 <code>AppID</code> 以及 <code>AppKey</code> 这两个参数即可正常使用文章阅读量统计的功能了。</p><p>登录 <code>LeanCloud</code> ，然后新建一个 <code>应用</code> 来专门进行博客的访问统计的数据操作。新建的 <code>应用</code> 名称我们可以随意输入，即便是输入的不满意我们后续也是可以更改的:</p><p>我创建的应用的名称为 <code>fxb_LeanCloud</code> 创建完成之后我们点击新创建的应用的名字来进行该应用的参数配置:</p><p><a href="http://ozduqh728.bkt.clouddn.com/20180126/data.png" target="_blank" rel="noopener"><img src="http://ozduqh728.bkt.clouddn.com/20180126/data.png" alt="" title="20180126/data"></a></p><p>在应用的数据配置界面，左侧下划线开头的都是系统预定义好的表，为了便于区分我们新建一张表来保存我们的数据。点击左侧右上角的图标，新建Class：</p><p><a href="http://ozduqh728.bkt.clouddn.com/20180126/creat_class.png" target="_blank" rel="noopener"><img src="http://ozduqh728.bkt.clouddn.com/20180126/creat_class.png" alt="" title="20180126/creat\_class"></a></p><blockquote><p>注意：此处的新建 <strong>Class名字必须</strong> 为 <code>Counter</code> 。</p></blockquote><p><a href="http://ozduqh728.bkt.clouddn.com/20180126/no_limited.png" target="_blank" rel="noopener"><img src="http://ozduqh728.bkt.clouddn.com/20180126/no_limited.png" alt="" title="20180126/no\_limited"></a></p><blockquote><p>由于LeanCloud升级了默认的ACL权限，如果你想避免后续因为权限的问题导致次数统计显示不正常，建议在此处选择 <code>无限制</code> 。</p></blockquote><p>创建完成之后，左侧数据栏应该会多出一栏名为 <code>Counter</code> 的栏目。接下来我们获取应用的 <code>AppID</code> 以及 <code>AppKey</code> ，有了它们，我们就有权限能够通过主题中配置好的Javascript代码与这个应用的Counter表进行数据存取操作了:</p><p><a href="http://ozduqh728.bkt.clouddn.com/20180126/app_ID&amp;Key.png" target="_blank" rel="noopener"><img src="http://ozduqh728.bkt.clouddn.com/20180126/app_ID&amp;Key.png" alt="" title="20180126/app\_ID&amp;Key"></a></p><p>复制 <code>AppID</code> 以及 <code>AppKey</code> 并在 <code>NexT主题</code> 的 <code>_config.yml</code> 文件中我们相应的位置填入即可，正确配置之后文件内容像这个样子:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">app_id:</span> <span class="string">***joaeuuc4h***</span></span><br><span class="line"><span class="attr">app_key:</span> <span class="string">***E9UJsJpw1o***</span></span><br></pre></td></tr></table></figure><p>这个时候重新生成部署Hexo博客，应该就可以正常使用文章阅读量统计的功能了。</p><p><strong>需要特别说明的是：</strong> 记录文章访问量的唯一标识符是文章的发布日期以及文章的标题，因此请确保这两个数值组合的唯一性，如果你更改了这两个数值，会造成文章阅读数值的清零重计。</p><h4 id="Web安全"><a href="#Web安全" class="headerlink" title="Web安全"></a>Web安全</h4><p>因为 <code>AppID</code> 以及 <code>AppKey</code> 是暴露在外的，因此如果一些别有用心之人知道了之后用于其它目的是得不偿失的，为了确保只用于我们自己的博客，建议开启Web安全选项，这样就只能通过我们自己的域名才有权访问后台的数据了，可以进一步提升安全性。</p><p>选择应用的设置的安全中心选项卡：</p><p><a href="http://ozduqh728.bkt.clouddn.com/20180126/web_safe.png" target="_blank" rel="noopener"><img src="http://ozduqh728.bkt.clouddn.com/20180126/web_safe.png" alt="" title="20180126/web\_safe"></a></p><p>如果你不知道怎么填写安全域名而或者填写完成之后发现博客文章访问量显示不正常，打开浏览器调试模式，发现如下图的输出:</p><p><a href="http://ozduqh728.bkt.clouddn.com/20180126/error_LeanCloud.png" target="_blank" rel="noopener"><img src="http://ozduqh728.bkt.clouddn.com/20180126/error_LeanCloud.png" alt="" title="20180126/error\_LeanCloud"></a></p><p>这说明你的安全域名填写错误，导致服务器拒绝了数据交互的请求，你可以更改为正确的安全域名。</p><h4 id="后台管理"><a href="#后台管理" class="headerlink" title="后台管理"></a>后台管理</h4><p>当你配置部分完成之后，初始的文章统计量显示为0，但是这个时候我们 <code>应用</code>的 <code>Counter</code> 表中并没有相应的记录，只是单纯的显示为0而已，当博客文章在配置好阅读量统计服务之后第一次打开时，便会自动向服务器发送数据来创建一条数据，该数据会被记录在对应的应用的 <code>Counter</code> 表中。</p><h3 id="Local-Search【本地搜索】"><a href="#Local-Search【本地搜索】" class="headerlink" title="Local Search【本地搜索】"></a>Local Search【本地搜索】</h3><p>安装 <code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>编辑 <code>站点配置文件</code>，新增以下内容到任意位置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure><p>编辑 <code>主题配置文件</code>，启用本地搜索功能：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="评论系统-来必力"><a href="#评论系统-来必力" class="headerlink" title="评论系统 - 来必力"></a>评论系统 - 来必力</h3><p>登陆 <a href="https://livere.com/" target="_blank" rel="noopener">来必力</a> 获取你的 <code>LiveRe UID</code>。编辑 <code>主题配置文件</code>， 编辑 <code>livere_uid</code> 字段，设置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">livere_uid:</span> <span class="comment">#your livere_uid</span></span><br></pre></td></tr></table></figure><p>LiveRe 有两个版本：</p><ul><li><code>City</code><br>版：是一款适合所有人使用的免费版本；</li><li><code>Premium</code><br>版：是一款能够帮助企业实现自动化管理的多功能收费版本。</li></ul><p>第一步安装：</p><p><a href="http://ozduqh728.bkt.clouddn.com/20180126/city_anzhuang.png" target="_blank" rel="noopener"><img src="http://ozduqh728.bkt.clouddn.com/20180126/city_anzhuang.png" alt="" title="20180126/city\_anzhuang"></a></p><p>第二步填写信息：</p><p><a href="http://ozduqh728.bkt.clouddn.com/20180126/livere-get-code.png" target="_blank" rel="noopener"><img src="http://ozduqh728.bkt.clouddn.com/20180126/livere-get-code.png" alt="" title="20180126/livere-get-code"></a></p><p>第三步获取UID：</p><p><a href="http://ozduqh728.bkt.clouddn.com/20180126/uid_get.png" target="_blank" rel="noopener"><img src="http://ozduqh728.bkt.clouddn.com/20180126/uid_get.png" alt="" title="20180126/uid\_get"></a></p><h3 id="内容分享服务"><a href="#内容分享服务" class="headerlink" title="内容分享服务"></a>内容分享服务</h3><h4 id="JiaThis"><a href="#JiaThis" class="headerlink" title="JiaThis"></a>JiaThis</h4><p>编辑 <code>主题配置文件</code>， 添加/修改字段 <code>jiathis</code>，值为 <code>true</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># JiaThis 分享服务</span></span><br><span class="line"><span class="attr">jiathis:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="百度分享"><a href="#百度分享" class="headerlink" title="百度分享"></a>百度分享</h4><p>编辑 <code>主题配置文件</code>，添加/修改字段baidushare，值为 <code>true</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidushare:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">button</span> <span class="comment">#百度分享展示的方式button|slide</span></span><br></pre></td></tr></table></figure><hr><p><strong>问题待解决</strong>：分享服务本地浏览正常，部署到GitHub上后失效！</p><p>当前解决状态：</p><p>查看网页生成网址源码，与分享服务提供的源码基本一致。但仍无法执行，我将JiaThis或百度分享的代码直接贴到hexo生成文件中也是这种情况。</p><p>暂时理解：</p><p>可能是JavaScript加载问题导致的，因为其文字加载正常，但是后续出现问题！</p><p>解决帮助：</p><p>next的分享代码生成在文件夹：themes → next → layout → _partials → share</p><blockquote><p>博客编号：20180120084123</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;CSDN博客专栏：&lt;a href=&quot;http://blog.csdn.net/column/details/19262.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub + Hexo 搭建博客平台&lt;/a&gt;&lt;/p
      
    
    </summary>
    
      <category term="静态博客搭建" scheme="http://yoursite.com/categories/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="静态博客" scheme="http://yoursite.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Next" scheme="http://yoursite.com/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub搭建静态博客平台(二)-配置网站及使用</title>
    <link href="http://yoursite.com/2018/01/27/Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/2018-01-27-Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0(%E4%BA%8C)/"/>
    <id>http://yoursite.com/2018/01/27/Hexo+GitHub搭建静态博客/2018-01-27-Hexo+GitHub搭建静态博客平台(二)/</id>
    <published>2018-01-27T07:41:23.000Z</published>
    <updated>2018-03-18T01:36:03.097Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>CSDN博客专栏：<a href="http://blog.csdn.net/column/details/19262.html" target="_blank" rel="noopener">GitHub + Hexo 搭建博客平台</a></p></blockquote><h2 id="配置网站"><a href="#配置网站" class="headerlink" title="配置网站"></a>配置网站</h2><p>我们可以在 <code>_config.yml</code> 文件中修改大部份的配置。</p><p>注意：此篇博文中讲解的是配置的含义，而详细的配置将在接下来的博文中进行介绍。</p><h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">title</td><td style="text-align:left">网站标题</td></tr><tr><td style="text-align:left">subtitle</td><td style="text-align:left">网站副标题</td></tr><tr><td style="text-align:left">description</td><td style="text-align:left">网站描述</td></tr><tr><td style="text-align:left">author</td><td style="text-align:left">您的名字</td></tr><tr><td style="text-align:left">language</td><td style="text-align:left">网站使用的语言</td></tr><tr><td style="text-align:left">timezone</td><td style="text-align:left">网站时区。<strong>Hexo 默认使用您电脑的时区</strong>。<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">时区列表</a>。比如说：America/New_York, Japan, 和 UTC 。</td></tr></tbody></table><p>其中， <code>description</code> 主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。 <code>author</code> 参数用于主题显示文章的作者。 <code>timezone</code> 建议保持默认即可。</p><h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">url</td><td style="text-align:left">网址</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">root</td><td style="text-align:left">网站根目录</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">permalink</td><td style="text-align:left">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks.html" title="永久链接" target="_blank" rel="noopener">永久链接</a> 格式</td><td style="text-align:left">:year/:month/:day/:title/</td></tr><tr><td style="text-align:left">permalink_defaults</td><td style="text-align:left">永久链接中各部分的默认值</td></tr></tbody></table><blockquote><p><strong>网站存放在子目录</strong></p><p>如果您的网站存放在子目录中，例如 <code>http://yoursite.com/blog</code>，则请将您的 url 设为 <code>http://yoursite.com/blog</code> 并把 root 设为 <code>/blog/</code>。</p></blockquote><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">source_dir</td><td style="text-align:left">资源文件夹，这个文件夹用来存放内容。</td><td style="text-align:left">source</td></tr><tr><td style="text-align:left">public_dir</td><td style="text-align:left">公共文件夹，这个文件夹用于存放生成的站点文件。</td><td style="text-align:left">public</td></tr><tr><td style="text-align:left">tag_dir</td><td style="text-align:left">标签文件夹</td><td style="text-align:left">tags</td></tr><tr><td style="text-align:left">archive_dir</td><td style="text-align:left">归档文件夹</td><td style="text-align:left">archives</td></tr><tr><td style="text-align:left">category_dir</td><td style="text-align:left">分类文件夹</td><td style="text-align:left">categories</td></tr><tr><td style="text-align:left">code_dir</td><td style="text-align:left">Include code 文件夹</td><td style="text-align:left">downloads/code</td></tr><tr><td style="text-align:left">i18n_dir</td><td style="text-align:left">国际化（i18n）文件夹</td><td style="text-align:left">:lang</td></tr><tr><td style="text-align:left">skip_render</td><td style="text-align:left">跳过指定文件的渲染，您可使用 <a href="https://github.com/isaacs/node-glob" target="_blank" rel="noopener">glob</a> 表达式来匹配路径。</td></tr></tbody></table><blockquote><p>提示:如果您刚刚开始接触Hexo，通常没有必要修改这一部分的值。</p></blockquote><h3 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">new_post_name</td><td style="text-align:left">新文章的文件名称</td><td style="text-align:left">:title.md</td></tr><tr><td style="text-align:left">default_layout</td><td style="text-align:left">预设布局</td><td style="text-align:left">post</td></tr><tr><td style="text-align:left">auto_spacing</td><td style="text-align:left">在中文和英文之间加入空格</td><td style="text-align:left">false</td></tr><tr><td style="text-align:left">titlecase</td><td style="text-align:left">把标题转换为 title case</td><td style="text-align:left">false</td></tr><tr><td style="text-align:left">external_link</td><td style="text-align:left">在新标签中打开链接</td><td style="text-align:left">true</td></tr><tr><td style="text-align:left">filename_case</td><td style="text-align:left">把文件名称转换为 (1) 小写或 (2) 大写</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">render_drafts</td><td style="text-align:left">显示草稿</td><td style="text-align:left">false</td></tr><tr><td style="text-align:left">post_asset_folder</td><td style="text-align:left">启动 Asset 文件夹</td><td style="text-align:left">false</td></tr><tr><td style="text-align:left">relative_link</td><td style="text-align:left">把链接改为与根目录的相对位址</td><td style="text-align:left">false</td></tr><tr><td style="text-align:left">future</td><td style="text-align:left">显示未来的文章</td><td style="text-align:left">true</td></tr><tr><td style="text-align:left">highlight</td><td style="text-align:left">代码块的设置</td></tr></tbody></table><blockquote><p>相对地址</p><p>默认情况下，Hexo生成的超链接都是绝对地址。例如，如果您的网站域名为 <code>example.com</code> ,您有一篇文章名为 <code>hello</code> ，那么绝对链接可能像这样： <code>http://example.com/hello.html</code> ，它是绝对于域名的。相对链接像这样： <code>/hello.html</code> ，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。</p></blockquote><h3 id="分类-amp-标签"><a href="#分类-amp-标签" class="headerlink" title="分类 &amp; 标签"></a>分类 &amp; 标签</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">default_category</td><td style="text-align:left">默认分类</td><td style="text-align:left">uncategorized</td></tr><tr><td style="text-align:left">category_map</td><td style="text-align:left">分类别名</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">tag_map</td><td style="text-align:left">标签别名</td></tr></tbody></table><h3 id="日期-时间格式"><a href="#日期-时间格式" class="headerlink" title="日期 / 时间格式"></a>日期 / 时间格式</h3><p>Hexo 使用 <a href="http://momentjs.com/" target="_blank" rel="noopener">Moment.js</a> 来解析和显示时间。</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">date_format</td><td style="text-align:left">日期格式</td><td style="text-align:left">YYYY-MM-DD</td></tr><tr><td style="text-align:left">time_format</td><td style="text-align:left">时间格式</td><td style="text-align:left">H:mm:ss</td></tr></tbody></table><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">per_page</td><td style="text-align:left">每页显示的文章量 (0 = 关闭分页功能)</td><td style="text-align:left">10</td></tr><tr><td style="text-align:left">pagination_dir</td><td style="text-align:left">分页目录</td><td style="text-align:left">page</td></tr></tbody></table><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">theme</td><td style="text-align:left">当前主题名称。值为false时禁用主题</td></tr><tr><td style="text-align:left">deploy</td><td style="text-align:left">部署部分的设置</td></tr></tbody></table><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure><p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a> 中的 <code>default_layout</code> 参数代替。<strong>如果标题包含空格的话，请使用引号括起来。</strong></p><h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>生成静态文件。</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">-d, –deploy</td><td style="text-align:left">文件生成后立即部署网站</td></tr><tr><td style="text-align:left">-w, –watch</td><td style="text-align:left">监视文件变动</td></tr></tbody></table><p>该命令可以简写为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>发表草稿。</p><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">-p, –port</td><td style="text-align:left">重设端口</td></tr><tr><td style="text-align:left">-s, –static</td><td style="text-align:left">只使用静态文件</td></tr><tr><td style="text-align:left">-l, –log</td><td style="text-align:left">启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>部署网站。</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">-g, –generate</td><td style="text-align:left">部署之前预先生成静态文件</td></tr></tbody></table><p>该命令可以简写为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure><p>渲染文件。</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">-o, –output</td><td style="text-align:left">设置输出路径</td></tr></tbody></table><h3 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate &lt;<span class="built_in">type</span>&gt;</span><br></pre></td></tr></table></figure><p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration.html" target="_blank" rel="noopener">迁移内容</a>。</p><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo list &lt;<span class="built_in">type</span>&gt;</span><br></pre></td></tr></table></figure><p>列出网站资料。</p><h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure><p>显示 Hexo 版本。</p><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><h3 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --safe</span><br></pre></td></tr></table></figure><p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p><h3 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --debug</span><br></pre></td></tr></table></figure><p>在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次，并 提交调试信息到 GitHub。</p><h3 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --silent</span><br></pre></td></tr></table></figure><p>隐藏终端信息。</p><h3 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure><p>自定义配置文件的路径，执行后将不再使用 <code>_config.yml</code>。</p><h3 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --draft</span><br></pre></td></tr></table></figure><p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p><h3 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure><p>自定义当前工作目录（Current working directory）的路径。</p><h2 id="博客迁移"><a href="#博客迁移" class="headerlink" title="博客迁移"></a>博客迁移</h2><p>注意：我只接触过Jekyll，其它的没有接触，因此在此只写明迁移Jekyll的方法，更多详见《<a href="https://hexo.io/zh-cn/docs/migration.html" target="_blank" rel="noopener">迁移</a>》。</p><p>把 <code>_posts</code> 文件夹内的所有文件复制到 <code>source/_posts</code> 文件夹，并在 <code>_config.yml</code> 中修改 <code>new_post_name</code> 参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_post_name: :year-:month-:day-:title.md</span><br></pre></td></tr></table></figure><blockquote><p>博客编号：20180120074123</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;CSDN博客专栏：&lt;a href=&quot;http://blog.csdn.net/column/details/19262.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub + Hexo 搭建博客平台&lt;/a&gt;&lt;/p
      
    
    </summary>
    
      <category term="静态博客搭建" scheme="http://yoursite.com/categories/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="静态博客" scheme="http://yoursite.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub搭建静态博客平台(一)-环境配置及建站</title>
    <link href="http://yoursite.com/2018/01/27/Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/2018-01-27-Hexo+GitHub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0(%E4%B8%80)/"/>
    <id>http://yoursite.com/2018/01/27/Hexo+GitHub搭建静态博客/2018-01-27-Hexo+GitHub搭建静态博客平台(一)/</id>
    <published>2018-01-27T06:41:23.000Z</published>
    <updated>2018-03-18T01:36:03.097Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>CSDN博客专栏：<a href="http://blog.csdn.net/column/details/19262.html" target="_blank" rel="noopener">GitHub + Hexo 搭建博客平台</a></p></blockquote><h2 id="配置网站"><a href="#配置网站" class="headerlink" title="配置网站"></a>配置网站</h2><p>我们可以在 <code>_config.yml</code> 文件中修改大部份的配置。</p><p>注意：此篇博文中讲解的是配置的含义，而详细的配置将在接下来的博文中进行介绍。</p><h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">title</td><td style="text-align:left">网站标题</td></tr><tr><td style="text-align:left">subtitle</td><td style="text-align:left">网站副标题</td></tr><tr><td style="text-align:left">description</td><td style="text-align:left">网站描述</td></tr><tr><td style="text-align:left">author</td><td style="text-align:left">您的名字</td></tr><tr><td style="text-align:left">language</td><td style="text-align:left">网站使用的语言</td></tr><tr><td style="text-align:left">timezone</td><td style="text-align:left">网站时区。<strong>Hexo 默认使用您电脑的时区</strong>。<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">时区列表</a>。比如说：America/New_York, Japan, 和 UTC 。</td></tr></tbody></table><p>其中， <code>description</code> 主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。 <code>author</code> 参数用于主题显示文章的作者。 <code>timezone</code> 建议保持默认即可。</p><h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">url</td><td style="text-align:left">网址</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">root</td><td style="text-align:left">网站根目录</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">permalink</td><td style="text-align:left">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks.html" title="永久链接" target="_blank" rel="noopener">永久链接</a> 格式</td><td style="text-align:left">:year/:month/:day/:title/</td></tr><tr><td style="text-align:left">permalink_defaults</td><td style="text-align:left">永久链接中各部分的默认值</td></tr></tbody></table><blockquote><p><strong>网站存放在子目录</strong></p><p>如果您的网站存放在子目录中，例如 <code>http://yoursite.com/blog</code>，则请将您的 url 设为 <code>http://yoursite.com/blog</code> 并把 root 设为 <code>/blog/</code>。</p></blockquote><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">source_dir</td><td style="text-align:left">资源文件夹，这个文件夹用来存放内容。</td><td style="text-align:left">source</td></tr><tr><td style="text-align:left">public_dir</td><td style="text-align:left">公共文件夹，这个文件夹用于存放生成的站点文件。</td><td style="text-align:left">public</td></tr><tr><td style="text-align:left">tag_dir</td><td style="text-align:left">标签文件夹</td><td style="text-align:left">tags</td></tr><tr><td style="text-align:left">archive_dir</td><td style="text-align:left">归档文件夹</td><td style="text-align:left">archives</td></tr><tr><td style="text-align:left">category_dir</td><td style="text-align:left">分类文件夹</td><td style="text-align:left">categories</td></tr><tr><td style="text-align:left">code_dir</td><td style="text-align:left">Include code 文件夹</td><td style="text-align:left">downloads/code</td></tr><tr><td style="text-align:left">i18n_dir</td><td style="text-align:left">国际化（i18n）文件夹</td><td style="text-align:left">:lang</td></tr><tr><td style="text-align:left">skip_render</td><td style="text-align:left">跳过指定文件的渲染，您可使用 <a href="https://github.com/isaacs/node-glob" target="_blank" rel="noopener">glob</a> 表达式来匹配路径。</td></tr></tbody></table><blockquote><p>提示:如果您刚刚开始接触Hexo，通常没有必要修改这一部分的值。</p></blockquote><h3 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">new_post_name</td><td style="text-align:left">新文章的文件名称</td><td style="text-align:left">:title.md</td></tr><tr><td style="text-align:left">default_layout</td><td style="text-align:left">预设布局</td><td style="text-align:left">post</td></tr><tr><td style="text-align:left">auto_spacing</td><td style="text-align:left">在中文和英文之间加入空格</td><td style="text-align:left">false</td></tr><tr><td style="text-align:left">titlecase</td><td style="text-align:left">把标题转换为 title case</td><td style="text-align:left">false</td></tr><tr><td style="text-align:left">external_link</td><td style="text-align:left">在新标签中打开链接</td><td style="text-align:left">true</td></tr><tr><td style="text-align:left">filename_case</td><td style="text-align:left">把文件名称转换为 (1) 小写或 (2) 大写</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">render_drafts</td><td style="text-align:left">显示草稿</td><td style="text-align:left">false</td></tr><tr><td style="text-align:left">post_asset_folder</td><td style="text-align:left">启动 Asset 文件夹</td><td style="text-align:left">false</td></tr><tr><td style="text-align:left">relative_link</td><td style="text-align:left">把链接改为与根目录的相对位址</td><td style="text-align:left">false</td></tr><tr><td style="text-align:left">future</td><td style="text-align:left">显示未来的文章</td><td style="text-align:left">true</td></tr><tr><td style="text-align:left">highlight</td><td style="text-align:left">代码块的设置</td></tr></tbody></table><blockquote><p>相对地址</p><p>默认情况下，Hexo生成的超链接都是绝对地址。例如，如果您的网站域名为 <code>example.com</code> ,您有一篇文章名为 <code>hello</code> ，那么绝对链接可能像这样： <code>http://example.com/hello.html</code> ，它是绝对于域名的。相对链接像这样： <code>/hello.html</code> ，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。</p></blockquote><h3 id="分类-amp-标签"><a href="#分类-amp-标签" class="headerlink" title="分类 &amp; 标签"></a>分类 &amp; 标签</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">default_category</td><td style="text-align:left">默认分类</td><td style="text-align:left">uncategorized</td></tr><tr><td style="text-align:left">category_map</td><td style="text-align:left">分类别名</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">tag_map</td><td style="text-align:left">标签别名</td></tr></tbody></table><h3 id="日期-时间格式"><a href="#日期-时间格式" class="headerlink" title="日期 / 时间格式"></a>日期 / 时间格式</h3><p>Hexo 使用 <a href="http://momentjs.com/" target="_blank" rel="noopener">Moment.js</a> 来解析和显示时间。</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">date_format</td><td style="text-align:left">日期格式</td><td style="text-align:left">YYYY-MM-DD</td></tr><tr><td style="text-align:left">time_format</td><td style="text-align:left">时间格式</td><td style="text-align:left">H:mm:ss</td></tr></tbody></table><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th><th style="text-align:left">默认值</th></tr></thead><tbody><tr><td style="text-align:left">per_page</td><td style="text-align:left">每页显示的文章量 (0 = 关闭分页功能)</td><td style="text-align:left">10</td></tr><tr><td style="text-align:left">pagination_dir</td><td style="text-align:left">分页目录</td><td style="text-align:left">page</td></tr></tbody></table><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">theme</td><td style="text-align:left">当前主题名称。值为false时禁用主题</td></tr><tr><td style="text-align:left">deploy</td><td style="text-align:left">部署部分的设置</td></tr></tbody></table><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure><p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a> 中的 <code>default_layout</code> 参数代替。<strong>如果标题包含空格的话，请使用引号括起来。</strong></p><h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>生成静态文件。</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">-d, –deploy</td><td style="text-align:left">文件生成后立即部署网站</td></tr><tr><td style="text-align:left">-w, –watch</td><td style="text-align:left">监视文件变动</td></tr></tbody></table><p>该命令可以简写为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>发表草稿。</p><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">-p, –port</td><td style="text-align:left">重设端口</td></tr><tr><td style="text-align:left">-s, –static</td><td style="text-align:left">只使用静态文件</td></tr><tr><td style="text-align:left">-l, –log</td><td style="text-align:left">启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>部署网站。</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">-g, –generate</td><td style="text-align:left">部署之前预先生成静态文件</td></tr></tbody></table><p>该命令可以简写为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure><p>渲染文件。</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">-o, –output</td><td style="text-align:left">设置输出路径</td></tr></tbody></table><h3 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate &lt;<span class="built_in">type</span>&gt;</span><br></pre></td></tr></table></figure><p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration.html" target="_blank" rel="noopener">迁移内容</a>。</p><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo list &lt;<span class="built_in">type</span>&gt;</span><br></pre></td></tr></table></figure><p>列出网站资料。</p><h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure><p>显示 Hexo 版本。</p><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><h3 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --safe</span><br></pre></td></tr></table></figure><p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p><h3 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --debug</span><br></pre></td></tr></table></figure><p>在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次，并 提交调试信息到 GitHub。</p><h3 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --silent</span><br></pre></td></tr></table></figure><p>隐藏终端信息。</p><h3 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure><p>自定义配置文件的路径，执行后将不再使用 <code>_config.yml</code>。</p><h3 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --draft</span><br></pre></td></tr></table></figure><p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p><h3 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure><p>自定义当前工作目录（Current working directory）的路径。</p><h2 id="博客迁移"><a href="#博客迁移" class="headerlink" title="博客迁移"></a>博客迁移</h2><p>注意：我只接触过Jekyll，其它的没有接触，因此在此只写明迁移Jekyll的方法，更多详见《<a href="https://hexo.io/zh-cn/docs/migration.html" target="_blank" rel="noopener">迁移</a>》。</p><p>把 <code>_posts</code> 文件夹内的所有文件复制到 <code>source/_posts</code> 文件夹，并在 <code>_config.yml</code> 中修改 <code>new_post_name</code> 参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_post_name: :year-:month-:day-:title.md</span><br></pre></td></tr></table></figure><blockquote><p>博客编号：20180120074123</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;CSDN博客专栏：&lt;a href=&quot;http://blog.csdn.net/column/details/19262.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub + Hexo 搭建博客平台&lt;/a&gt;&lt;/p
      
    
    </summary>
    
      <category term="静态博客搭建" scheme="http://yoursite.com/categories/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="静态博客" scheme="http://yoursite.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
